<%- include('subHeader',{title:"Razer ID",cssFiles:["join.css"]}) %>
<div class="wrap">
    <div class="joinWrap">
        <div class="join">
            <h2 class="title">RAZER ID 계정 만들기</h2>
            <p>Razer ID는 모든 Razer 서비스 에서 사용할 수 있는 통합 계정입니다.</p>
            <form action="/joindb" method="post" class="form" id="join" >
                <div class="form_control">
                    <input type="text" id="userName" name="userName" placeholder="성함"  value="">
                    <span class="error_msg"></span>
                </div>
                <div class="form_control">
                    <input type="text" id="userBirth" name="userBirth" placeholder="생년월일 8자리 ex]20230101"  value="">
                    <span class="error_msg"></span>
                </div>
                <div class="form_control">
                    <input type="text" id="userId" name="userId" placeholder="이메일 주소 ex]example@example.com"  value="">
                    <span class="error_msg"></span>
                </div>
                <div class="form_control">
                    <input type="password" id="userPass" name="userPass" placeholder="암호" value="">
                    <span class="error_msg"></span>
                </div>
                <h3>약관</h3>
                <p>Razer는 고객님의 동의에 따라 관심사와 일치하는 광고 및 추천을 커스터마이징합니다</p>
                <p>Razer는 개인정보를 존중합니다. 동의 설정은 Razer ID 프로필 페이지에서 언제든지 변경할 수 있습니다.</p>
                <p><span>Terms of Service</span> 및 <span>Privacy Policy</span>에 동의하십니까?</p>
                <div class="check">
                    <input type="checkbox" name="ok" id="ok"  value="checked"><label for="ok">이용약관에 동의합니다</label>
                </div>
                <button class="btn" type="submit" disabled>동의 및 생성</button>
            </form>
            <div class="signIn">
                <p>이미 계정이 있으십니까?</p>
                <a href="/login">Razer ID 로그인<i class="fa-solid fa-angle-right"></i></a>
            </div>
        </div>
    </div>
</div>
<%- include('footer') %>
<script>
    const join = document.querySelector("#join");
    
    // 아이디 ~ 생년월일 입력값 받아오기 위한 태그선택
    const userId = document.querySelector("#userId");
    const userPass = document.querySelector("#userPass");
    const userName = document.querySelector("#userName");
    const userBirth = document.querySelector("#userBirth");
    const userOk = document.querySelector("#ok");
    const btn = document.querySelector(".btn");
    userOk.onclick = ()=>{
        if(userOk.checked === true ){
            btn.disabled = false;
        }
        else{
            btn.disabled = true;
    }
}
// console.log(join);

let idValue,PassValue,birthValue,nameValue;

//각 항목 정규표현식 체크시 데이터 확인
let validCheck = {
    validId:false,
    validPass:false,
    validName:false,
    validBirth:false
}

// 회원가입 버튼을 submit 이벤트로 달아주는 구간
join.addEventListener('submit',function(event){
    event.preventDefault(); //이벤트 발생시 멈춤
    // 인풋태그에 입력한 value값을 각 변수에 지정
    const idValue = userId.value;
    const PassValue = userPass.value;
    const nameValue = userName.value;
    const birthValue = userBirth.value;
    
    // 정규표현식 체크 -> 참.ok / 거짓 .no
    // 이름 체크 
    const checkName = /^[가-힣]{2,4}$/ //문자열을 체크하기 위한 정규표현식
    // 영문대소문자,숫자 _ ,!$&- 12,16
    const checkPass = /^[\w\-\!\$\&]{8,16}$/;
    // 이메일 체크 khp2337@gmail.com
    const checkId = /^[\w]+[\@][a-z]{5,7}[\.][a-z]{2,3}$/;
    // 생년월일 체크
    const checkBirth = /^(19[\d]{2}|20[\d]{2})(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])$/;
    
    const isValidId = checkId.test(idValue)
    const isValidPass = checkPass.test(PassValue)
    const isValidName = checkName.test(nameValue)
    const isValidBirth = checkBirth.test(birthValue)
    
    // 아이디 정규표현식 체크후 true / false에 따라 결과가 다르게 실행
    if(isValidId){
        userId.parentElement.className = "form_control ok";
        validCheck.validId = true;
    }
    else{
        userId.parentElement.className= "form_control no";
        userId.parentElement.querySelector(".error_msg").innerText = "이메일형식에 맞춰서 입력해주세요 (ex:asdf123@naver.com)";
        validCheck.validId = false;
    }
    //이름 체크
    if(isValidName){
        userName.parentElement.className = "form_control ok";
        validCheck.validName = true;
    }
    else{
        userName.parentElement.className= "form_control no";
        userName.parentElement.querySelector(".error_msg").innerText = "이름을 제대로 입력해주세요"; 
        validCheck.validName = false;
    }
    // 비밀번호 체크
    if(isValidPass){
        userPass.parentElement.className = "form_control ok";
        validCheck.validPass = true;
    }
    else{
        userPass.parentElement.className= "form_control no";
        userPass.parentElement.querySelector(".form_control.no .error_msg").innerText = "12~16자리의 영문,숫자,특수문자(_,!,$,&,-) 만 입력 가능합니다.";
        validCheck.validPass = false;
    }
    // 생년월일 체크
    if(isValidBirth){
        userBirth.parentElement.className= "form_control ok";
        validCheck.validBirth = true;
    }
    else{
        userBirth.parentElement.className= "form_control no";
        userBirth.parentElement.querySelector(".error_msg").innerText = "생년월일을 제대로 입력해주세요";
        validCheck.validBirth = false;
        userBirth.focus();
    }
    const isValid = Object.values(validCheck).every((value) => value === true);
    
    if (isValid) {
        // Submit the form if all validations pass
        join.submit();
    }
    // 모든 프로퍼티 항목이 전부 true일 때 태그생성작업
})

</script>
<script src="/js/dropmenu.js"></script>
<script src="/js/header.js"></script>
</body>
</html>